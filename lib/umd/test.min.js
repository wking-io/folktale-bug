!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.test=n()}(this,function(){"use strict";var t=3;var n=function(n){if("none"!==process.env.FOLKTALE_ASSERTIONS){var e=new Error("").stack,r=void 0;e&&(r=e.split("\n")[t]),r?console.warn(n+"\n    Blame: "+r.trim()):console.warn(n)}},e=Object.keys,r=Object.getOwnPropertySymbols,o=Object.defineProperty,u=Object.getOwnPropertyDescriptor;var a=function(t){for(var n=arguments.length,a=Array(n>1?n-1:0),i=1;i<n;i++)a[i-1]=arguments[i];return a.forEach(function(n){e(n).forEach(function(e){"prototype"===e?t[e]=n[e]:o(t,e,u(n,e))}),r(n).forEach(function(e){o(t,e,u(n,e))})}),t};function i(t,n){for(var e in n){var r=n[e];r.configurable=r.enumerable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,e,r)}return t}function c(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var s=Symbol.for("@@folktale:adt:type"),l=Symbol.for("@@folktale:adt:tag"),f=Symbol.for("@@meta:magical"),h=Object.keys;function y(t,e,r){return u=function(e,o){var u,s,h,y,p;function v(){}function d(){var t=new v;return a(t,o.apply(void 0,arguments)||{}),t}return v.prototype=Object.create(r),a(v.prototype,(c(s={},l,e),"constructor",(h={}).constructor=h.constructor||{},h.constructor.get=function(){return o},h[u="is"+e]=h[u]||{},h[u].get=function(){return n(".is"+e+" is deprecated. Use "+e+".hasInstance(value)\ninstead to check if a value belongs to the ADT variant."),!0},c(s,"matchWith",function(t){return t[e](this)}),i(s,h),s)),a(d,(c(y={},f,o[f]),"tag",(p={}).tag=p.tag||{},p.tag.get=function(){return e},"type",p.type=p.type||{},p.type.get=function(){return t},"constructor",p.constructor=p.constructor||{},p.constructor.get=function(){return o},c(y,"prototype",v.prototype),c(y,"hasInstance",function(t){return Boolean(t)&&r.hasInstance(t)&&t[l]===e}),i(y,p),y)),d},h(o=e).reduce(function(t,n){return t[n]=u(n,o[n]),t},{});var o,u}var p=function(t,n){var e,r,o=Object.create(v),u=y(t,n,o);return a(o,u,(c(e={},s,t),c(e,"variants",h(r=u).map(function(t){return r[t]})),c(e,"hasInstance",function(t){return Boolean(t)&&t[s]===this[s]}),e)),o},v={derive:function(){for(var t=this,n=arguments.length,e=Array(n),r=0;r<n;r++)e[r]=arguments[r];return e.forEach(function(n){t.variants.forEach(function(e){return n(e,t)})}),this}};p.Union=v,p.typeSymbol=s,p.tagSymbol=l;var d=p,g=d.typeSymbol,m=function(t){return function(n,e){var r=t[g];"none"===process.env.FOLKTALE_ASSERTIONS||t.isPrototypeOf(e)||(console.warn(r+"."+n+" expects a value of the same type, but was given "+e+"."),"minimal"!==process.env.FOLKTALE_ASSERTIONS&&console.warn("\nThis could mean that you've provided the wrong value to the method, in\nwhich case this is a bug in your program, and you should try to track\ndown why the wrong value is getting here.\n\nBut this could also mean that you have more than one "+r+" library\ninstantiated in your program. This is not **necessarily** a bug, it\ncould happen for several reasons:\n\n 1) You're loading the library in Node, and Node's cache didn't give\n    you back the same instance you had previously requested.\n\n 2) You have more than one Code Realm in your program, and objects\n    created from the same library, in different realms, are interacting.\n\n 3) You have a version conflict of folktale libraries, and objects\n    created from different versions of the library are interacting.\n\nIf your situation fits the cases (1) or (2), you are okay, as long as\nthe objects originate from the same version of the library. Folktale\ndoes not rely on reference checking, only structural checking. However\nyou'll want to watch out if you're modifying the "+r+"'s prototype,\nbecause you'll have more than one of them, and you'll want to make\nsure you do the same change in all of them â€” ideally you shouldn't\nbe modifying the object, though.\n\nIf your situation fits the case (3), you are *probably* okay if the\nversion difference isn't a major one. However, at this point the\nbehaviour of your program using "+r+" is undefined, and you should\ntry looking into why the version conflict is happening.\n\nParametric modules can help ensuring your program only has a single\ninstance of the folktale library. Check out the Folktale Architecture\ndocumentation for more information.\n      "))}},b=function(t,n){if("function"!=typeof n)throw new TypeError(t+" expects a function, but was given "+n+".")},O=function(t,n){for(var e=Object.keys(t),r={},o=0;o<e.length;++o){var u=e[o];r[u]=n(t[u])}return r};O.infix=function(t){return O(this,t)};var S=O,E=function(t){return Object.keys(t).map(function(n){return t[n]})};function k(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var w,N,R=d.tagSymbol,F=d.typeSymbol,j=(N=F,w=function(t){return t[N]},function(t){return t.reduce(function(t,n){return t[w(n)]=n,t},{})}),J=function(t){return void 0===t?null:null!==t&&"function"==typeof t.toJSON?t.toJSON():t},T=function(t,n){var e=n[F],r=t.prototype[R];t.prototype.toJSON=function(){var t;return k(t={},"@@type",e),k(t,"@@tag",r),k(t,"@@value",S(this,J)),t},n.fromJSON=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k({},e,n),o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=t["@@type"],i=t["@@tag"],c=t["@@value"];!function(t,n){if(n!==t)throw new TypeError("\n       The JSON structure was generated from "+n+".\n       You are trying to parse it as "+t+". \n    ")}(e,u);var s=o?r:j(E(r)),l=S(c,function(t){return function(n){if(null!==n&&"string"==typeof n["@@type"]){var e=n["@@type"];return t[e]?t[e].fromJSON(n,t,!0):n}return n}}(s));return a(Object.create(n[i].prototype),l)}},V="fantasy-land/equals";var M,A=function(t,n){return function e(r){return function(){for(var o=arguments.length,u=Array(o),a=0;a<o;a++)u[a]=arguments[a];var i=r.concat(u);return i.length<t?e(i):n.apply(void 0,function(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}(i))}}([])},x=V,q=(M="equals",function(t){return n("Type."+M+"() is being deprecated in favour of Type['fantasy-land/"+M+"'](). \n    Your data structure is using the old-style fantasy-land methods,\n    and these won't be supported in Folktale 3"),t}),I=function(t){return function(n){throw new TypeError(n+" does not have a method '"+t+"'.")}}("equals"),G=function(t,n){return"function"==typeof t[x]?t[x](n):function(t){return"function"==typeof t.equals}(t)?q(t.equals(n)):I(t)};G.curried=A(2,function(t,n){return G(n,t)}),G.infix=function(t){return G(this,t)};var P=G,W={equals:{"fantasy-land/equals":function(t){return this.equals(t)}},concat:{"fantasy-land/concat":function(t){return this.concat(t)}},empty:{"fantasy-land/empty":function(){return this.empty()}},map:{"fantasy-land/map":function(t){return this.map(t)}},apply:{ap:function(t){return this.apply(t)},"fantasy-land/ap":function(t){return t.apply(this)}},of:{"fantasy-land/of":function(t){return this.of(t)}},reduce:{"fantasy-land/reduce":function(t,n){return this.reduce(t,n)}},traverse:{"fantasy-land/traverse":function(t,n){return this.traverse(t,n)}},chain:{"fantasy-land/chain":function(t){return this.chain(t)}},chainRecursively:{chainRec:function(t,n){return this.chainRecursively(t,n)},"fantasy-land/chainRec":function(t,n){return this.chainRecursively(t,n)}},extend:{"fantasy-land/extend":function(t){return this.extend(t)}},extract:{"fantasy-land/extract":function(){return this.extract()}},bimap:{"fantasy-land/bimap":function(t,n){return this.bimap(t,n)}},promap:{"fantasy-land/promap":function(t,n){return this.promap(t,n)}}},C=function(t){Object.keys(W).forEach(function(n){"function"==typeof t[n]&&Object.keys(W[n]).forEach(function(e){t[e]=W[n][e]})})},L=Symbol.for("@@meta:magical"),Y=function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};"false"!==process.env.FOLKTALE_DOCS&&(n[L]=Object.assign({},t[L]||{},e))},U=d.tagSymbol,z=d.typeSymbol,B=Object.prototype.toString,K=Object.getPrototypeOf,_=function(t){return null!=t&&("function"==typeof t[V]||"function"==typeof t.equals)},D=function(t){return Object(t)===t&&(!K(t)||!t.toString||B.call(t)===t.toString())},H=function t(n){var e=function(t,e){if(t===e)return!0;var r=_(t),o=_(e);return r?!!o&&P(t,e):n(t,e)},r=function(t,n){return t.prototype.equals=function(t){return m(n)(this[U]+"#equals",t),o=t,(r=this)[z]===o[z]&&r[U]===o[U]&&function(t,n,r){for(var o=0;o<r.length;++o){var u=t[r[o]],a=n[r[o]];if(!e(u,a))return!1}return!0}(this,t,Object.keys(this));var r,o},C(t.prototype),t};return Y(t,r,{type:"(Variant, Union) => Void"}),r},Q=H(function t(n,e){if(n===e)return!0;var r=_(n),o=_(e);if(r)return!!o&&P(n,e);if(Array.isArray(n)&&Array.isArray(e))return n.length===e.length&&n.every(function(n,r){return t(n,e[r])});if(D(n)&&D(e)){var u=Object.keys(n),a=Object.keys(e),i=new Set(a);return u.length===a.length&&K(n)===K(e)&&u.every(function(t){return i.has(t)&&n[t]===e[t]})}return!1}),X=H;Q.withCustomComparison=X;var Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$=d.tagSymbol,tt=d.typeSymbol,nt=function(){return"{ "+(t=this,Object.keys(t).map(function(n){return n+": "+ut(t[n])}).join(", "))+" }";var t},et=function(){return"["+this.map(ut).join(", ")+"]"},rt=function(){return"null"},ot=function(t){return null===t?rt:Array.isArray(t)?et:function(t){return!t.toString||t.toString===Object.prototype.toString}(t)?nt:t.toString},ut=function(t){return void 0===t?"undefined":"function"==typeof t?"[Function"+function(t){return""!==t.name?": "+t.name:""}(t)+"]":"symbol"===(void 0===t?"undefined":Z(t))?t.toString():"object"===(void 0===t?"undefined":Z(t))?ot(t).call(t):JSON.stringify(t)},at={union:d,derivations:{serialization:T,equality:Q,debugRepresentation:function(t,n){var e=n[tt],r=n[tt]+"."+t.prototype[$];return n[Symbol.toStringTag]=e,t.prototype[Symbol.toStringTag]=r,n.toString=function(){return e},t.toString=function(){return r},t.prototype.toString=function(){return r+"("+nt.call(this)+")"},n.inspect=n.toString,t.inspect=t.toString,t.prototype.inspect=t.prototype.toString,t}}},it=function(t,n){Object.keys(n).forEach(function(e){var r=n[e];t.variants.forEach(function(t){var n=r[t.tag];if(!n)throw new TypeError("Method "+e+" not defined for "+t.tag);Y(r,n),t.prototype[e]=n})})},ct=en.Error,st=en.Ok,lt=function(t){return t.matchWith({Failure:function(t){var n=t.value;return ct(n)},Success:function(t){var n=t.value;return st(n)}})},ft=en.Error,ht=en.Ok,yt=function(t,n){return t.matchWith({Nothing:function(){return ft(n)},Just:function(t){var n=t.value;return ht(n)}})},pt=Wt.Success,vt=Wt.Failure,dt=function(t,n){return t.matchWith({Nothing:function(){return vt(n)},Just:function(t){var n=t.value;return pt(n)}})},gt=at.union,mt=at.derivations,bt=mt.equality,Ot=mt.debugRepresentation,St=mt.serialization,Et=gt("folktale:Maybe",{Nothing:function(){},Just:function(t){return{value:t}}}).derive(bt,Ot,St),kt=Et.Nothing,wt=Et.Just,Nt=m(Et);a(wt.prototype,{get value(){throw new TypeError("`value` canâ€™t be accessed in an abstract instance of Maybe.Just")}}),it(Et,{map:{Nothing:function(t){return b("Maybe.Nothing#map",t),this},Just:function(t){return b("Maybe.Just#map",t),wt(t(this.value))}},apply:{Nothing:function(t){return Nt("Maybe.Nothing#apply",t),this},Just:function(t){return Nt("Maybe.Just#apply",t),t.map(this.value)}},chain:{Nothing:function(t){return b("Maybe.Nothing#chain",t),this},Just:function(t){return b("Maybe.Just#chain",t),t(this.value)}},unsafeGet:{Nothing:function(){throw new TypeError("Can't extract the value of a Nothing.\n\n    Since Nothing holds no values, it's not possible to extract one from them.\n    You might consider switching from Maybe#get to Maybe#getOrElse, or some other method\n    that is not partial.\n      ")},Just:function(){return this.value}},getOrElse:{Nothing:function(t){return t},Just:function(t){return this.value}},orElse:{Nothing:function(t){return b("Maybe.Nothing#orElse",t),t(this.value)},Just:function(t){return b("Maybe.Nothing#orElse",t),this}},concat:{Nothing:function(t){return Nt("Maybe.Nothing#concat",t),t},Just:function(t){var n=this;return Nt("Maybe.Just#concat",t),t.matchWith({Nothing:function(){return wt(n.value)},Just:function(t){return wt(n.value.concat(t.value))}})}},cata:{Nothing:function(t){return n("`.cata(pattern)` is deprecated. Use `.matchWith(pattern)` instead."),t.Nothing()},Just:function(t){return n("`.cata(pattern)` is deprecated. Use `.matchWith(pattern)` instead."),t.Just(this.value)}},fold:{Nothing:function(t,n){return b("Maybe.Nothing#fold",t),b("Maybe.Nothing#fold",n),t()},Just:function(t,n){return b("Maybe.Just#fold",t),b("Maybe.Just#fold",n),n(this.value)}},filter:{Nothing:function(t){return b("Maybe.Nothing#filter",t),this},Just:function(t){return b("Maybe.Just#filter",t),t(this.value)?this:kt()}}}),Object.assign(Et,{of:function(t){return wt(t)},empty:function(){return kt()},get:function(){return n("`.get()` is deprecated, and has been renamed to `.unsafeGet()`."),this.unsafeGet()},toResult:function(t){return yt(this,t)},toValidation:function(t){return dt(this,t)}}),C(wt.prototype),C(kt.prototype),C(Et);var Rt=Et,Ft=Rt.Just,jt=Rt.Nothing,Jt=function(t){return t.matchWith({Failure:function(){return jt()},Success:function(t){var n=t.value;return Ft(n)}})},Tt=at.union,Vt=at.derivations,Mt=Vt.equality,At=Vt.debugRepresentation,xt=Vt.serialization,qt=Tt("folktale:Validation",{Failure:function(t){return{value:t}},Success:function(t){return{value:t}}}).derive(Mt,At,xt),It=qt.Success,Gt=qt.Failure,Pt=m(qt);a(Gt.prototype,{get value(){throw new TypeError("`value` canâ€™t be accessed in an abstract instance of Validation.Failure")}}),a(It.prototype,{get value(){throw new TypeError("`value` canâ€™t be accessed in an abstract instance of Validation.Success")}}),it(qt,{map:{Failure:function(t){return b("Validation.Failure#map",t),this},Success:function(t){return b("Validation.Success#map",t),It(t(this.value))}},apply:{Failure:function(t){return Pt("Failure#apply",t),Gt.hasInstance(t)?Gt(this.value.concat(t.value)):this},Success:function(t){return Pt("Success#apply",t),Gt.hasInstance(t)?t:t.map(this.value)}},unsafeGet:{Failure:function(){throw new TypeError("Can't extract the value of a Failure.\n\n    Failure does not contain a normal value - it contains an error.\n    You might consider switching from Validation#get to Validation#getOrElse, or some other method\n    that is not partial.\n      ")},Success:function(){return this.value}},getOrElse:{Failure:function(t){return t},Success:function(t){return this.value}},orElse:{Failure:function(t){return b("Validation.Failure#orElse",t),t(this.value)},Success:function(t){return b("Validation.Success#orElse",t),this}},concat:{Failure:function(t){return Pt("Validation.Failure#concat",t),Gt.hasInstance(t)?Gt(this.value.concat(t.value)):this},Success:function(t){return Pt("Validation.Success#concat",t),t}},fold:{Failure:function(t,n){return b("Validation.Failure#fold",t),b("Validation.Failure#fold",n),t(this.value)},Success:function(t,n){return b("Validation.Success#fold",t),b("Validation.Success#fold",n),n(this.value)}},swap:{Failure:function(){return It(this.value)},Success:function(){return Gt(this.value)}},bimap:{Failure:function(t,n){return b("Validation.Failure#fold",t),b("Validation.Failure#fold",n),Gt(t(this.value))},Success:function(t,n){return b("Validation.Success#fold",t),b("Validation.Success#fold",n),It(n(this.value))}},mapFailure:{Failure:function(t){return b("Validation.Failure#mapFailure",t),Gt(t(this.value))},Success:function(t){return b("Validation.Failure#mapFailure",t),this}}}),Object.assign(qt,{of:function(t){return It(t)},get:function(){return n("`.get()` is deprecated, and has been renamed to `.unsafeGet()`."),this.unsafeGet()},merge:function(){return this.value},toResult:function(){return lt(this)},toMaybe:function(){return Jt(this)}}),C(It.prototype),C(Gt.prototype),C(qt);var Wt=qt,Ct=Wt.Success,Lt=Wt.Failure,Yt=function(t){return t.matchWith({Error:function(t){var n=t.value;return Lt(n)},Ok:function(t){var n=t.value;return Ct(n)}})},Ut=Rt.Just,zt=Rt.Nothing,Bt=function(t){return t.matchWith({Error:function(t){return t.value,zt()},Ok:function(t){var n=t.value;return Ut(n)}})},Kt=at.union,_t=at.derivations,Dt=_t.equality,Ht=_t.debugRepresentation,Qt=_t.serialization,Xt=Kt("folktale:Result",{Error:function(t){return{value:t}},Ok:function(t){return{value:t}}}).derive(Dt,Ht,Qt),Zt=Xt.Error,$t=Xt.Ok,tn=m(Xt);a(Zt.prototype,{get value(){throw new TypeError("`value` canâ€™t be accessed in an abstract instance of Result.Error")}}),a($t.prototype,{get value(){throw new TypeError("`value` canâ€™t be accessed in an abstract instance of Result.Ok")}}),it(Xt,{map:{Error:function(t){return b("Result.Error#map",t),this},Ok:function(t){return b("Result.Ok#map",t),$t(t(this.value))}},apply:{Error:function(t){return tn("Result.Error#apply",t),this},Ok:function(t){return tn("Result.Ok#apply",t),t.map(this.value)}},chain:{Error:function(t){return b("Result.Error#chain",t),this},Ok:function(t){return b("Result.Ok#chain",t),t(this.value)}},unsafeGet:{Error:function(){throw new TypeError("Can't extract the value of an Error.\n\nError does not contain a normal value - it contains an error.\nYou might consider switching from Result#unsafeGet to Result#getOrElse,\nor some other method that is not partial.\n      ")},Ok:function(){return this.value}},getOrElse:{Error:function(t){return t},Ok:function(t){return this.value}},orElse:{Error:function(t){return b("Result.Error#orElse",t),t(this.value)},Ok:function(t){return b("Result.Ok#orElse",t),this}},concat:{Error:function(t){return tn("Result.Error#concat",t),this},Ok:function(t){var n=this;return tn("Result.Ok#concat",t),t.map(function(t){return n.value.concat(t)})}},fold:{Error:function(t,n){return b("Result.Error#fold",t),b("Result.Error#fold",n),t(this.value)},Ok:function(t,n){return b("Result.Ok#fold",t),b("Result.Ok#fold",n),n(this.value)}},swap:{Error:function(){return $t(this.value)},Ok:function(){return Zt(this.value)}},bimap:{Error:function(t,n){return b("Result.Error#bimap",t),b("Result.Error#bimap",n),Zt(t(this.value))},Ok:function(t,n){return b("Result.Ok#bimap",t),b("Result.Ok#bimap",n),$t(n(this.value))}},mapError:{Error:function(t){return b("Result.Error#mapError",t),Zt(t(this.value))},Ok:function(t){return b("Result.Ok#mapError",t),this}},filter:{Error:function(t){return b("Result.Error#filter",t),this},Ok:function(t){return b("Result.Ok#filter",t),t(this.value)?this:Zt()}}}),Object.assign(Xt,{of:function(t){return $t(t)},get:function(){return n("`.get()` is deprecated, and has been renamed to `.unsafeGet()`."),this.unsafeGet()},merge:function(){return this.value},toValidation:function(){return Yt(this)},toMaybe:function(){return Bt(this)}}),C(Zt.prototype),C($t.prototype),C(Xt);var nn,en=Xt,rn=en.Error,on=en.Ok,un=function(t){try{return on(t())}catch(t){return rn(t)}},an=en.Error,cn=en.Ok,sn=function(t,e){var r=arguments.length<2;r&&n("nullableToResult(value) is being deprecated in favour of providing an explicit fallback value.\nnullableToResult(value, fallback) is the new preferred form of this function.\n");var o=r?t:e;return null!=t?cn(t):an(o)};function ln(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var fn=d.typeSymbol,hn=(ln(nn={Error:en.Error,Ok:en.Ok,hasInstance:en.hasInstance,of:en.of,fromJSON:en.fromJSON},fn,en[fn]),ln(nn,"try",un),ln(nn,"fromNullable",function(t,n){var e=sn;return arguments.length>1?e(t,n):e(t)}),ln(nn,"fromValidation",function(t){return lt(t)}),ln(nn,"fromMaybe",function(t,n){return yt(t,n)}),nn);return function(t){return hn.fromNullable(t?"success":null)}});
